/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewRequestDialog.java
 *
 * Created on 5 Nov, 2010, 12:52:04 AM
 */

package net.sf.jsharing.boundary;

import java.util.ArrayList;
import net.sf.jsharing.components.RequestPanel;
import net.sf.jsharing.components.UsefulMethods;

/**
 * 
 * @author Pratik
 */
public class NewRequestDialog extends javax.swing.JDialog {
	private static NewRequestDialog nrd = null;
	private ArrayList<RequestPanel> rps = new ArrayList<RequestPanel>();

	/** Creates new form NewRequestDialog */
	private NewRequestDialog(java.awt.Frame parent) {
		super(parent, false);
		initComponents();
		this.setAlwaysOnTop(true);

		setBottomRightLocation();
	}

	public static NewRequestDialog getNewRequestDialog() {
		if (nrd == null)
			nrd = new NewRequestDialog(null);
		return nrd;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel4 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jPanel2 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		setUndecorated(true);

		jPanel1.setBackground(new java.awt.Color(204, 255, 255));
		jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(
				0, 0, 255), 1, true));

		jLabel4.setText("<html><body><a href=\"\">Hide Popup</body></html>");
		jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jLabel4MouseClicked(evt);
			}
		});

		jScrollPane1
				.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

		jPanel2.setBackground(new java.awt.Color(102, 102, 102));
		jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2,
				javax.swing.BoxLayout.Y_AXIS));
		jScrollPane1.setViewportView(jPanel2);

		jLabel1.setText("New Request Popup");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(jLabel1)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												199, Short.MAX_VALUE)
										.addComponent(
												jLabel4,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap())
						.addComponent(jScrollPane1,
								javax.swing.GroupLayout.DEFAULT_SIZE, 370,
								Short.MAX_VALUE));
		jPanel1Layout
				.setVerticalGroup(jPanel1Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel1Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel1)
														.addComponent(
																jLabel4,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												76, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jLabel4MouseClicked
		closeDialog();
	}// GEN-LAST:event_jLabel4MouseClicked

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;

	// End of variables declaration//GEN-END:variables

	public void addRequestPanel(RequestPanel rp) {
		rps.add(rp);
		jPanel2.add(rp.getPopupPanel());
		rp.startCanClose();
		jScrollPane1.getVerticalScrollBar().setValue(
				jScrollPane1.getVerticalScrollBar().getMaximum()
						+ jScrollPane1.getVerticalScrollBar()
								.getVisibleAmount());

		showDialog();
	}

	private void setBottomRightLocation() {
		UsefulMethods.placeAtRightBottomLocation(this);
	}

	public void showDialog() {
		if (!isVisible())
			setVisible(true);
	}

	public void removePopupPanel(PopupPanel pp) {
		for (RequestPanel rp : rps)
			if (rp.getPopupPanel() == pp) {
				removeRequestPanel(rp);
				break;
			}
	}

	public void removeRequestPanel(RequestPanel rp) {
		if (!rps.remove(rp))
			return;

		this.jPanel2.remove(rp.getPopupPanel());
		jPanel2.repaint();

		if (rps.isEmpty())
			closeDialog();
	}

	public void closeDialog() {
		if (this.isVisible())
			this.setVisible(false);
	}

	public void attemptToClose() {
		if (!this.isVisible())
			return;

		boolean canClose = true;

		// check wether all rps are done
		for (RequestPanel rp : rps) {
			canClose = canClose && rp.CanClose();
			if (!canClose)
				break;
		}

		// if yes then close the dialog
		if (canClose)
			closeDialog();
	}
}
