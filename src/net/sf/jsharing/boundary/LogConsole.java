/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LogConsole.java
 *
 * Created on 17 Nov, 2010, 11:48:42 PM
 */

package net.sf.jsharing.boundary;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * 
 * @author Pratik
 */
public class LogConsole extends javax.swing.JFrame {
	private String logFor;

	/** Creates new form LogConsole */
	public LogConsole(String logFor) {
		this.logFor = logFor;
		initComponents();
		this.setTitle(this.logFor);

		this.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent we) {
				hideConsole();
			}
		});

		this.setLocationByPlatform(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		jPopupMenu1 = new javax.swing.JPopupMenu();
		jMenuItem1 = new javax.swing.JMenuItem();
		jMenuItem2 = new javax.swing.JMenuItem();
		jButton3 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jCheckBox1 = new javax.swing.JCheckBox();
		jCheckBox2 = new javax.swing.JCheckBox();
		jButton1 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jCheckBox3 = new javax.swing.JCheckBox();

		jMenuItem1.setText("Copy Selected");
		jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem1ActionPerformed(evt);
			}
		});
		jPopupMenu1.add(jMenuItem1);

		jMenuItem2.setText("Copy All");
		jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem2ActionPerformed(evt);
			}
		});
		jPopupMenu1.add(jMenuItem2);

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

		jButton3.setText("Copy to Clipboard");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jButton2.setText("Clear");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jTextArea1.setColumns(20);
		jTextArea1.setEditable(false);
		jTextArea1.setRows(5);
		jScrollPane1.setViewportView(jTextArea1);

		jCheckBox1.setText("Wrap Words");
		jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox1ItemStateChanged(evt);
			}
		});

		jCheckBox2.setText("Wrap Line");
		jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jCheckBox2ItemStateChanged(evt);
			}
		});

		jButton1.setText("Save");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton4.setText("Close");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});

		jCheckBox3.setSelected(true);
		jCheckBox3.setText("Auto Scroll");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														577, Short.MAX_VALUE)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		jButton2)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		36,
																		Short.MAX_VALUE)
																.addComponent(
																		jCheckBox3)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jCheckBox2)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jCheckBox1)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButton1)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButton3)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButton4)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										356, Short.MAX_VALUE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton3)
												.addComponent(jButton2)
												.addComponent(jButton1)
												.addComponent(jCheckBox1)
												.addComponent(jCheckBox2)
												.addComponent(jButton4)
												.addComponent(jCheckBox3))
								.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		int choice = JOptionPane.showConfirmDialog(this,
				"Do you want to clear the logs?", "Clear",
				JOptionPane.YES_NO_OPTION);
		if (choice == JOptionPane.YES_OPTION)
			jTextArea1.setText("Cleared.");
	}// GEN-LAST:event_jButton2ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		int caretPosition = jTextArea1.getCaretPosition();
		jTextArea1.selectAll();
		jTextArea1.copy();
		jTextArea1.setCaretPosition(caretPosition);
		JOptionPane.showMessageDialog(this,
				"Logs copied to Clipboard successfully.");
	}// GEN-LAST:event_jButton3ActionPerformed

	private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jCheckBox1ItemStateChanged
		jTextArea1.setWrapStyleWord(jCheckBox1.isSelected());
	}// GEN-LAST:event_jCheckBox1ItemStateChanged

	private void jCheckBox2ItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jCheckBox2ItemStateChanged
		jTextArea1.setLineWrap(jCheckBox2.isSelected());
	}// GEN-LAST:event_jCheckBox2ItemStateChanged

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		JFileChooser jfc = new JFileChooser();
		int choice = jfc.showSaveDialog(this);
		if (choice == JFileChooser.APPROVE_OPTION) {
			try {
				PrintWriter pw = new PrintWriter(jfc.getSelectedFile());
				pw.print(jTextArea1.getText());
				pw.close();

				JOptionPane.showConfirmDialog(this, "Log saved successfully.");
			} catch (Exception e) {
				JOptionPane.showConfirmDialog(
						this,
						"Error while saving logs.\n"
								+ "System returned the following:\n"
								+ e.getMessage());
			}
		}
	}// GEN-LAST:event_jButton1ActionPerformed

	private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem1ActionPerformed
		jTextArea1.copy();
	}// GEN-LAST:event_jMenuItem1ActionPerformed

	private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem2ActionPerformed
		jButton3ActionPerformed(evt);
	}// GEN-LAST:event_jMenuItem2ActionPerformed

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton4ActionPerformed
		hideConsole();
	}// GEN-LAST:event_jButton4ActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JCheckBox jCheckBox2;
	private javax.swing.JCheckBox jCheckBox3;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem jMenuItem2;
	private javax.swing.JPopupMenu jPopupMenu1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jTextArea1;

	// End of variables declaration//GEN-END:variables

	public void appendLog(String text) {
		// Determine whether the scrollbar is currently at the very bottom
		// position.
		// JScrollBar vbar = jScrollPane1.getVerticalScrollBar();
		// boolean autoScroll = ((vbar.getValue() + vbar.getVisibleAmount()) ==
		// vbar.getMaximum());

		// append the data
		jTextArea1.append(text + "\n");

		// now scroll if we were already at the bottom.
		// if (autoScroll) {
		if (this.isVisible() && jCheckBox3.isSelected()) {
			jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
		}
	}

	public void showConsole() {
		if (this.isVisible())
			this.requestFocus();
		else
			this.setVisible(true);
	}

	public void hideConsole() {
		if (this.isVisible())
			this.setVisible(false);
	}
}
